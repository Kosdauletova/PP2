import pygame
import sys
import random
import time
from db import save_user_game, get_user_game
import sys

# –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
user_id = int(sys.argv[1])

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Ä–æ–≤–Ω–µ–π ---
levels = {
    1: {'speed': 10, 'walls': []},
    2: {'speed': 15, 'walls': [(100, 100), (120, 100), (140, 100)]},
    3: {'speed': 20, 'walls': [(200, 200), (220, 200), (240, 200), (260, 200)]}
}

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞ ---
WIDTH, HEIGHT = 600, 400
BLOCK_SIZE = 20

# --- –¶–≤–µ—Ç–∞ ---
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED   = (255, 0, 0)
BLACK = (0, 0, 0)
GRAY  = (100, 100, 100)

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ ---
def draw_text(screen, text, size, x, y, color=WHITE):
    font = pygame.font.SysFont('Arial', size)
    text_surface = font.render(text, True, color)
    screen.blit(text_surface, (x, y))

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pygame ---
pygame.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("üêç Snake Game")
clock = pygame.time.Clock()

# --- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
loaded = get_user_game(user_id)
if loaded:
    score, level, saved_state = loaded
    if saved_state:
        snake = eval(saved_state)  # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–ø–∏—Å–æ–∫
    else:
        snake = [(100, 100)]
else:
    score = 0
    level = 1
    snake = [(100, 100)]

direction = (BLOCK_SIZE, 0)
food = (random.randint(0, (WIDTH - BLOCK_SIZE) // BLOCK_SIZE) * BLOCK_SIZE,
        random.randint(0, (HEIGHT - BLOCK_SIZE) // BLOCK_SIZE) * BLOCK_SIZE)

paused = False

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ---
running = True
while running:
    screen.fill(BLACK)

    # –†–∏—Å—É–µ–º —Å—Ç–µ–Ω—ã
    for wall in levels[level]['walls']:
        pygame.draw.rect(screen, GRAY, (*wall, BLOCK_SIZE, BLOCK_SIZE))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and direction != (0, BLOCK_SIZE):
                direction = (0, -BLOCK_SIZE)
            elif event.key == pygame.K_DOWN and direction != (0, -BLOCK_SIZE):
                direction = (0, BLOCK_SIZE)
            elif event.key == pygame.K_LEFT and direction != (BLOCK_SIZE, 0):
                direction = (-BLOCK_SIZE, 0)
            elif event.key == pygame.K_RIGHT and direction != (-BLOCK_SIZE, 0):
                direction = (BLOCK_SIZE, 0)
            elif event.key == pygame.K_p:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä—É –∏ –≤—ã—Ö–æ–¥–∏–º
                save_user_game(user_id, score, level, str(snake))
                print("–ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
                paused = True

    if paused:
        draw_text(screen, "–ò–≥—Ä–∞ –Ω–∞ –ø–∞—É–∑–µ. –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –≤—ã—Ö–æ–¥–∞.", 20, 50, HEIGHT // 2, RED)
        pygame.display.flip()
        time.sleep(2)
        break

    # –î–≤–∏–∂–µ–Ω–∏–µ –∑–º–µ–π–∫–∏
    new_head = (snake[0][0] + direction[0], snake[0][1] + direction[1])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å–æ —Å—Ç–µ–Ω–∞–º–∏ –∏–ª–∏ —Å–æ–±–æ–π
    if (
        new_head in snake or
        new_head[0] < 0 or new_head[0] >= WIDTH or
        new_head[1] < 0 or new_head[1] >= HEIGHT or
        new_head in levels[level]['walls']
    ):
        draw_text(screen, "GAME OVER", 40, WIDTH // 3, HEIGHT // 2, RED)
        pygame.display.flip()
        time.sleep(2)
        save_user_game(user_id, 0, 1, None)
        break

    snake.insert(0, new_head)

    # –ü–æ–µ–ª –∏–ª–∏ –Ω–µ—Ç
    if new_head == food:
        score += 1
        # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å
        if score % 5 == 0 and level < max(levels.keys()):
            level += 1
        food = (random.randint(0, (WIDTH - BLOCK_SIZE) // BLOCK_SIZE) * BLOCK_SIZE,
                random.randint(0, (HEIGHT - BLOCK_SIZE) // BLOCK_SIZE) * BLOCK_SIZE)
    else:
        snake.pop()

    # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∑–º–µ–∏ –∏ –µ–¥—ã
    for part in snake:
        pygame.draw.rect(screen, GREEN, (*part, BLOCK_SIZE, BLOCK_SIZE))
    pygame.draw.rect(screen, RED, (*food, BLOCK_SIZE, BLOCK_SIZE))

    draw_text(screen, f"–£—Ä–æ–≤–µ–Ω—å: {level}  –û—á–∫–∏: {score}", 20, 10, 10)

    pygame.display.flip()
    clock.tick(levels[level]['speed'])

pygame.quit()
